    HIP: 12
    Title:  destroy & mapping v1
    Author: zhang yi <zhang_btc@outlook.com>
    Category: Application
    Status: Draft
    Created: 2019-05-09

# Abstract

When the HLC main network goes online, the old HLC (erc20  token) will cease to be used and the holder will obtain the HLC on the main network through the map of the main network.

# Motivation

complete erc20 hlc -> hlc mainet transformation;

# Specification

Destroy: send erc20 HLC to the ***black hole address***;

Mapping: monitor the address of the black hole on the main chain, issue mainet HLC to the mapping address according to the budget ratio after receiving erc20 HLC;

image::./hip-0012/mapping.jpg[mappingprocess]

# Implementation

1. Record the mapped address in the smart contract

create solidity smart contract:

    pragma solidity ^0.4.24;

    contract AddressMapping {
        
    mapping(address => bytes) balances;
    
    function addAddress( bytes HLCMainAdd ) {
        require( balances[msg.sender].length == 0, 'One address can only correspond to one map');
        balances[msg.sender] = HLCMainAdd;
    }

    function getHCLaddress( address _owner ) view returns( bytes ) {
        return balances[_owner];
    }
    }

2. Call addAddress to add the mapping address;

    0x14723a09acff6d2a60dcdf7aa4aff308fddc160c -> 0x44d959afb6db4ad730a6e2c0daf46ceeb98c53a0

    // ETH -> HLC publickeyhash
    0x14723a09acff6d2a60dcdf7aa4aff308fddc160c -> RmCYoUMqKZopUkai2YhUFHR9UeqjeyjTAgW

3. Erc20 HLC send to `0x0000000000000000000000000000000000000000`;


    MyContract.methods.transfer(
    '0x0000000000000000000000000000000000000000',
    10000000
    ).send()

4. Oracle listens to the transfer

After listening to the transfer, query the mapped address through the AddressMapping contract, and transfer HLC main to the mapped address according to the specified proportion to complete the token exchange.